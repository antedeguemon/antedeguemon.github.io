defmodule Cyberspace.Posts do
  defmodule Item do
    defstruct [:date, :title, :description, :url]
  end

  def build do
    [
      %Item{
        date: "01/2021",
        title: "Happy new year, humans!",
        description: [
          "Last year was rough for you humans. Congratz on not giving up. :)"
        ]
      },
      %Item{
        date: "12/2020",
        title: "antedeguemon_checks",
        url: "https://github.com/antedeguemon/antedeguemon_checks",
        description: [
          "This is a collection of Credo checks that I use for code reviews.",
          "It is my effort to automate <a href=\"https://gist.github.com/antedeguemon/672ef7986f81e63377420853fcc7863e\">my pull request checklist</a>."
        ]
      },
      %Item{
        date: "11/2020",
        title: "How to design large-scale systems?",
        url: "https://github.com/donnemartin/system-design-primer"
      },
      %Item{
        date: "11/2020",
        title: "Tibia gameservers architecture",
        url:
          "http://twvideo01.ubm-us.net/o1/vault/gdceurope2011/slides/Matthias_Rudy_ProgrammingTrack_InsideTibiaArchitecture.pdf"
      },
      %Item{
        date: "10/2020",
        title: "Contract Net Protocol implementation in Elixir",
        url: "https://github.com/antedeguemon/contract_net",
        description: [
          "This is a Contract Net implemented in Elixir that I did for my Multi Agent Systems class."
        ]
      },
      %Item{
        date: "08/2020",
        title: "Simple Driving by Mads Rosendahl",
        url: "/stuff/simple_driving.pdf",
        description: [
          "Paper from Mads Rosendahl about using supercompilation to optimize time-bound programs generated by <a href=\"stuff/rosendahl.pdf\">his automatic complexity analysis tool</a>.",
          "He demonstrates that with optimizations generated from supercompilation and some heuristics, it is possible to obtain closed-forms complexity bounds from open time-bound programs.",
        ]
      },
      %Item{
        date: "08/2020",
        title: "A supercompiler for Erlang",
        url: "https://github.com/weinholt/erlscp",
        description: [
          "<strong>Super</strong>visioned <strong>compilation</strong> is a form of metacompilation - as partial evaluation.",
          "It evaluates programs in a limited runtime and uses results from this runtime to extract conclusions from the program behavior. It is a program transformation technique and may be as a program analysis tool and as a program optimization tool."
        ]
      },
      %Item{
        date: "05/2020",
        title: "Building beautiful systems with Phoenix contexts by Andrew Hao",
        url: "https://www.youtube.com/watch?v=l3VgbSgo71E"
      },
      %Item{
        date: "05/2020",
        title: "About LIKE injection",
        url: "https://github.blog/2015-11-03-like-injection/",
        description: [
          "Beware of `%` injected into LIKE clauses."
        ]
      },
      %Item{
        date: "04/2020",
        title: "Automatic Complexity Analysis by Mads Rosendahl",
        url: "/stuff/rosendahl.pdf"
      },
      %Item{
        date: "03/2020",
        title: "Papers we love channel",
        url: "https://www.youtube.com/user/PapersWeLove/videos"
      },
      %Item{
        date: "03/2020",
        title: "LFE: Lisp Flavored Erlang",
        url: "http://lfe.io/"
      },
      %Item{
        date: "03/2020",
        title: "Spoofing epmd",
        url:
          "http://blog.listincomprehension.com/2010/03/spoofing-erlang-distribution-protocol.html"
      },
      %Item{
        date: "03/2020",
        title: "Academic Papers about Erlang",
        url: "https://erlef.org/academic-papers/"
      },
      %Item{
        date: "03/2020",
        title: "BEAM Mignon",
        url: "https://beam-mignon.netlify.com/posts/",
        description: [
          "Blog em português sobre a BEAM, com conteúdo fantástico."
        ]
      },
      %Item{
        date: "03/2020",
        title: "RacketCon 2013: James Swaine - Automatic Complexity Analysis",
        url: "https://www.youtube.com/watch?v=osoMIIrmHzI"
      },
      %Item{
        date: "03/2020",
        title: "Tail call Wikipedia page",
        url: "https://en.wikipedia.org/wiki/Tail_call"
      },
      %Item{
        date: "02/2020",
        title: "Erlang The Movie II: The Sequel",
        url: "https://www.youtube.com/watch?v=rRbY3TMUcgQ"
      },
      %Item{
        date: "02/2020",
        title: "Pleroma project",
        url: "https://git.pleroma.social/pleroma/pleroma",
        description: [
          "<del>Mastodon but written in Elixir.</del>"
        ]
      },
      %Item{
        date: "02/2020",
        title: "Design smells page in Wikipedia",
        url: "https://en.wikipedia.org/wiki/Design_smell"
      },
      %Item{
        date: "02/2020",
        title: "The \"97 Things Every Programmer Should Know\" book",
        url: "https://www.amazon.com.br/Things-Every-Programmer-Should-Know/dp/0596809484",
        description: [
          "A compiled list of programming wisdom."
        ]
      },
      %Item{
        date: "02/2020",
        title: "HTDP's co-author site, Felleisen",
        url: "https://felleisen.org/matthias/"
      },
      %Item{
        date: "02/2020",
        title: "F# for fun and profit",
        url: "https://fsharpforfunandprofit.com/"
      },
      %Item{
        date: "02/2020",
        title: "Functional Design Patterns by Scott Wlaschin",
        url:
          "https://www.youtube.com/watch?v=srQt1NAHYC0&list=PLL59e5Us1WHmKLl19IRTK0Rg2cQ44dtmK&index=20",
        description: [
          "A tour around functional programming jargon town."
        ]
      },
      %Item{
        date: "02/2020",
        title: "Cargo cult programming Wikipedia page",
        url: "https://en.wikipedia.org/wiki/Cargo_cult_programming"
      },
      %Item{
        date: "02/2020",
        title: "FizzBuzz in Haskell by Embedding a Domain-Specific Language",
        url: "https://themonadreader.files.wordpress.com/2014/04/fizzbuzz.pdf",
        description: [
          "A programming rollercoaster."
        ]
      },
      %Item{
        date: "11/2019",
        title: "Beautiful Concurrency by Simon Peyton Jones",
        url: "https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/beautiful.pdf",
        description: [
          "Article from the Beautiful Code book about software transactional memory (in Haskell)."
        ]
      },
      %Item{
        date: "11/2019",
        title: "Why threads are a bad idea (for most purposes) (1995) by John Ousterhout",
        url: "stuff/threads.pdf",
        description: [
          "\"You must be this tall to use threads.\"<br/>- someone who I wish was my friend once said.",
          "Concurrency and paralelism are great powers that come with great responsabilities."
        ]
      },
      %Item{
        date: "04/2019",
        title: "Teach Yourself Programming in Ten Years by Peter Norvig",
        url: "https://norvig.com/21-days.html",
        description: [
          "I do not agree with the style of this text - putting writing good software as something holy
                  only possible to be archived by years of training.",
          "But Norvig is a genius and there is much learn from this article, specially the SICP and HTDP recommendations. :P"
        ]
      },
      %Item{
        date: "04/2019",
        title: "Searching the Internet for evidence of time travelers by Nemiroff and Wilson",
        url: "stuff/time_travelers_on_internet.pdf"
      }
    ]
  end

  def render do
    Cyberspace.render_template("posts", posts: build())
  end
end
